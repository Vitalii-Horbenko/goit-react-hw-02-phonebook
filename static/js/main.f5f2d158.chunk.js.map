{"version":3,"sources":["components/ContactForm/ContactForm..js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","className","type","pattern","title","required","onChange","Component","Filter","ContactsListItem","items","onDeleteContact","map","contact","onClick","id","uuidv4","ContactList","contacts","App","filter","addContact","findIndex","newContact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5f2d158.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactsListItem = ({ items, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      {items.map((contact) => {\r\n        return (\r\n          <li key={uuidv4()}>\r\n            {`${contact.name}: ${contact.number}`}{\" \"}\r\n            <button\r\n              type=\"button\"\r\n              name=\"delete\"\r\n              onClick={() => onDeleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  items: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from \"react\";\r\nimport ContactsListItem from \"../ContactsListItem\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <ContactsListItem items={contacts} onDeleteContact={onDeleteContact} />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./App.css\";\r\nimport ContactForm from \"../ContactForm\";\r\nimport Filter from \"../Filter\";\r\nimport ContactList from \"../ContactList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (\r\n      this.state.contacts.findIndex((contact) => contact.name === name) !== -1\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [newContact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n        <h2 className=\"title\">Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={this.getVisibleContacts()}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}